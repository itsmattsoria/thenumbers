---
import { Image } from 'astro:assets';

import Layout from '../layouts/Layout.astro';
import Chart from '../components/chart.vue';
import Stats from '../components/stats.vue';
import Table from '../components/table.vue';
const deadMeatLogo = '/images/dead-meat-logo.png';

const killCountResponse = await fetch("https://share.mattsoria.com/movie_kill_counts_07-01-25.json");
const killCountData = await killCountResponse.json();
const totalData = killCountData.pop();
---

<Layout>
	<header class="container">
		<h1 class="container-fill-text">
			<span class="sr-only">The Numbers: A Dead Meat Kill Count Fan Site</span>
			<span class="container-fill-text__container" aria-hidden="true">
				<span class="container-fill-text__display"><span class="font-dnk color-dm-red">The Numbers:</span> <br>A <a href="https://www.deadmeat.rip" class="heartBeat"><Image src={deadMeatLogo} alt="" width="300" height="171" /></a> Kill Count fan site</span>
			</span>
			<span class="container-fill-text__reference" aria-hidden="true"><span class="font-dnk">The Numbers:</span> A <a href="https://www.deadmeat.rip" class="heartBeat"><Image src={deadMeatLogo} alt="" width="300" height="171" /></a> Kill Count fan site</span>
		</h1>
		<p class="tagline">Where we tally up the victims in <strong>all</strong> of Dead Meat's Kill Counts. Search and filter the table to see updated stats.</p>
	</header>

	<div class="chart-header container">
		<div class="chart-container">
			<Chart client:load totalData={totalData} /> 
		</div>
		<div class="stat-container">
			<Stats client:load />
		</div>
	</div>
	<div class="container">
		<Table client:load killCountData={killCountData} /> 
	</div>
</Layout>

<style>
	header {
		padding-block: 2rem;
	}

	h1 {
		margin: 0;
		line-height: 1;
		text-box-trim: trim-both;

		.sr-only {
			width: 0;
			height: 0;
			position: absolute;
		}

		span {
			text-wrap: balance;
		}
		img {
			width: auto;
			height: 1em;
			transform: translateY(10%);
		}

		br {
			@media screen and (min-width: 768px) {
				display: none;
			}
		}
	}

	.tagline {
		font-size: 1.25rem;
		text-wrap: balance;
		margin-block-start: 0.5em;
	}

	.chart-header {
		gap: 2rem;
		display: grid;
		align-items: center;
		padding-block: 2rem;
		grid-template-columns: repeat(12, 1fr);
	}
	.chart-container {
		grid-column: 1 / 6;
	}
	.stat-container {
		grid-column: 6 / 13;
		transform: translateY(-15%);
	}
</style>